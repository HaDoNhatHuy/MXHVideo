@* @model Web_Video.ViewModels.Home.HomeViewModel
<div class="bg-dark rounded">
    <div class="row p-2">
        <div class="col-4">
            <select id="categoryDropdown" asp-items="Model.CategoryDropdown" class="form-select"></select>
        </div>
        <div class="col-8 text-end d-flex">
            <input id="searchInput" placeholder="Search" class="form-control" />
            <button class="btn btn-secondary ms-2" type="button" id="searchBtn">Search</button>
        </div>
    </div>
</div>

<div class="p-2" id="videosTableBody"></div>

<div class="d-flex justify-content-end me-3 mb-2">
    <ul class="navbar-nav me-3">
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" id="itemsPerPageDropdown" role="button" aria-expanded="false">Rows per page:</a>
            <div class="dropdown-menu">
                <button type="button" class="dropdown-item pageSizeBtn" data-value="10">10</button>
                <button type="button" class="dropdown-item pageSizeBtn" data-value="20">20</button>
                <button type="button" class="dropdown-item pageSizeBtn" data-value="50">50</button>
                <button type="button" class="dropdown-item pageSizeBtn" data-value="100">100</button>
            </div>
        </li>
    </ul>
    <ul class="navbar-nav me-3">
        <li class="nav-item">
            <span class="nav-link" id="itemsPerPageDisplay"></span>
        </li>
    </ul>
    <ul class="navbar-nav me-3">
        <li class="nav-item">
            <span class="nav-link" id="paginationSummery"></span>
        </li>
    </ul>

    <div id="paginationBtnGroup" class="btn-group">
    </div>
</div>
<div class="d-flex justify-content-end me-3 mb-2">
    <ul class="navbar-nav me-3">
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" id="itemsPerPageDropdown" role="button" aria-expanded="false">Rows per page:</a>
            <div class="dropdown-menu">
                <button type="button" class="dropdown-item pageSizeBtn" data-value="10">10</button>
                <button type="button" class="dropdown-item pageSizeBtn" data-value="20">20</button>
                <button type="button" class="dropdown-item pageSizeBtn" data-value="50">50</button>
                <button type="button" class="dropdown-item pageSizeBtn" data-value="100">100</button>
            </div>
        </li>
    </ul>
    <ul class="navbar-nav me-3">
        <li class="nav-item">
            <span class="nav-link" id="itemsPerPageDisplay"></span>
        </li>
    </ul>
    <ul class="navbar-nav me-3">
        <li class="nav-item">
            <span class="nav-link" id="paginationSummery"></span>
        </li>
    </ul>

    <div id="paginationBtnGroup" class="btn-group">
    </div>
</div> *@
@model Web_Video.ViewModels.Home.HomeViewModel
<div class="bg-dark rounded">
    <div class="row p-2">
        <div class="col-4">
            <select id="categoryDropdown" asp-items="Model.CategoryDropdown" class="form-select"></select>
        </div>
        <div class="col-8 text-end d-flex position-relative">
            <input id="searchInput"
                   placeholder="Search"
                   class="form-control"
                   autocomplete="off"
                   aria-autocomplete="list"
                   aria-controls="searchSuggestions" />
            <!-- Thêm container cho gợi ý tìm kiếm -->
            <div id="searchSuggestions"
                 class="position-absolute w-100 bg-white border rounded shadow-sm"
                 style="display: none; top: 100%; z-index: 1000;"></div>
            <!-- Nút tìm kiếm bằng giọng nói -->
            <button class="btn btn-outline-secondary ms-2"
                    type="button"
                    id="voiceSearchBtn"
                    title="Voice Search">
                <i class="bi bi-mic"></i> <!-- Giả sử bạn dùng Bootstrap Icons -->
            </button>
            <button class="btn btn-secondary ms-2"
                    type="button"
                    id="searchBtn">
                Search
            </button>
        </div>
    </div>
</div>

@* <!-- Phần còn lại giữ nguyên -->
<div class="p-2" id="videosTableBody"></div>

<!-- Pagination giữ nguyên -->
<div class="d-flex justify-content-end me-3 mb-2">
    <!-- ... code pagination hiện tại của bạn ... -->
</div> *@
<div class="p-2" id="videosTableBody"></div>

<div class="d-flex justify-content-end me-3 mb-2">
    <ul class="navbar-nav me-3">
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" id="itemsPerPageDropdown" role="button" aria-expanded="false">Rows per page:</a>
            <div class="dropdown-menu">
                <button type="button" class="dropdown-item pageSizeBtn" data-value="10">10</button>
                <button type="button" class="dropdown-item pageSizeBtn" data-value="20">20</button>
                <button type="button" class="dropdown-item pageSizeBtn" data-value="50">50</button>
                <button type="button" class="dropdown-item pageSizeBtn" data-value="100">100</button>
            </div>
        </li>
    </ul>
    <ul class="navbar-nav me-3">
        <li class="nav-item">
            <span class="nav-link" id="itemsPerPageDisplay"></span>
        </li>
    </ul>
    <ul class="navbar-nav me-3">
        <li class="nav-item">
            <span class="nav-link" id="paginationSummery"></span>
        </li>
    </ul>

    <div id="paginationBtnGroup" class="btn-group">
    </div>
</div>
<div class="d-flex justify-content-end me-3 mb-2">
    <ul class="navbar-nav me-3">
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" id="itemsPerPageDropdown" role="button" aria-expanded="false">Rows per page:</a>
            <div class="dropdown-menu">
                <button type="button" class="dropdown-item pageSizeBtn" data-value="10">10</button>
                <button type="button" class="dropdown-item pageSizeBtn" data-value="20">20</button>
                <button type="button" class="dropdown-item pageSizeBtn" data-value="50">50</button>
                <button type="button" class="dropdown-item pageSizeBtn" data-value="100">100</button>
            </div>
        </li>
    </ul>
    <ul class="navbar-nav me-3">
        <li class="nav-item">
            <span class="nav-link" id="itemsPerPageDisplay"></span>
        </li>
    </ul>
    <ul class="navbar-nav me-3">
        <li class="nav-item">
            <span class="nav-link" id="paginationSummery"></span>
        </li>
    </ul>

    <div id="paginationBtnGroup" class="btn-group">
    </div>
</div>

<!-- Thêm script xử lý -->
<script>
    // Xử lý gợi ý tìm kiếm
    const searchInput = document.getElementById('searchInput');
    const suggestionsContainer = document.getElementById('searchSuggestions');

    searchInput.addEventListener('input', async function() {
        const query = this.value.trim();
        if (query.length < 2) {
            suggestionsContainer.style.display = 'none';
            return;
        }

        // Giả sử bạn có API endpoint cho gợi ý
        try {
            const response = await fetch(`/api/search/suggestions?q=${encodeURIComponent(query)}`);
            const suggestions = await response.json();

            if (suggestions.length > 0) {
                suggestionsContainer.innerHTML = suggestions
                    .map(s => `<div class="p-2 suggestion-item" role="option">${s}</div>`)
                    .join('');
                suggestionsContainer.style.display = 'block';
            } else {
                suggestionsContainer.style.display = 'none';
            }
        } catch (error) {
            console.error('Error fetching suggestions:', error);
            suggestionsContainer.style.display = 'none';
        }
    });

    // Click suggestion
    suggestionsContainer.addEventListener('click', function(e) {
        if (e.target.classList.contains('suggestion-item')) {
            searchInput.value = e.target.textContent;
            suggestionsContainer.style.display = 'none';
            // Trigger search nếu cần
            document.getElementById('searchBtn').click();
        }
    });

    // Ẩn suggestions khi click ra ngoài
    document.addEventListener('click', function(e) {
        if (!searchInput.contains(e.target) && !suggestionsContainer.contains(e.target)) {
            suggestionsContainer.style.display = 'none';
        }
    });

    // Xử lý tìm kiếm bằng giọng nói
    const voiceSearchBtn = document.getElementById('voiceSearchBtn');

    voiceSearchBtn.addEventListener('click', function() {
        if (!('webkitSpeechRecognition' in window)) {
            alert('Trình duyệt của bạn không hỗ trợ tìm kiếm bằng giọng nói');
            return;
        }

        const recognition = new webkitSpeechRecognition();
        recognition.continuous = false;
        recognition.interimResults = false;
        recognition.lang = 'vi-VN'; // Có thể thay đổi ngôn ngữ

        recognition.onstart = function() {
            voiceSearchBtn.classList.add('recording');
        };

        recognition.onresult = function(event) {
            const transcript = event.results[0][0].transcript;
            searchInput.value = transcript;
            voiceSearchBtn.classList.remove('recording');
            // Tự động tìm kiếm sau khi nhận diện
            document.getElementById('searchBtn').click();
        };

        recognition.onerror = function(event) {
            console.error('Voice recognition error:', event.error);
            voiceSearchBtn.classList.remove('recording');
            alert('Có lỗi khi nhận diện giọng nói');
        };

        recognition.onend = function() {
            voiceSearchBtn.classList.remove('recording');
        };

        recognition.start();
    });
</script>

<style>
    .suggestion-item:hover {
        background-color: #f8f9fa;
        cursor: pointer;
    }

    #voiceSearchBtn.recording {
        background-color: #dc3545;
        color: white;
    }
</style>