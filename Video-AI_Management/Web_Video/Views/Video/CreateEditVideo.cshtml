@model Web_Video.ViewModels.Video.VideoAddEditViewModel

<div class="card border-secondary mb-3">
    <div class="card-header bg-black-info">
        <span class="text-dark h4">
            @(Model.Id != Guid.Empty ? "Edit" : "Create") Video
        </span>
    </div>
    <div class="card-body">
        <form id="videoAddEditForm" asp-action="CreateEditVideo" enctype="multipart/form-data">
            <input id="videoId" hidden asp-for="Id" />
            <input id="imageUrl" asp-for="ImageUrl" hidden />

            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="CategoryId" class="form-label"></label>
                        <select asp-for="CategoryId" asp-items="Model.CategoryDropdown" class="form-select">
                            <option disabled selected>Select here</option>
                        </select>
                        <span asp-validation-for="CategoryId" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Title" class="form-label"></label>
                        <input asp-for="Title" class="form-control" />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Description" class="form-label"></label>
                        <textarea asp-for="Description" class="form-control" rows="6"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <div class="card mb-2 preview-image rounded bg-secondary" id="previewImage"></div>
                        <label asp-for="ImageUpload" class="form-label"></label>
                        <input id="imageUpload" asp-for="ImageUpload" type="file" class="form-control" accept="@Model.ImageContentTypes" />
                        <span asp-validation-for="ImageUpload" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="VideoUpload" class="form-label"></label>
                        <input id="videoUpload" asp-for="VideoUpload" type="file" class="form-control" accept="@Model.VideoContentTypes" />
                        <span asp-validation-for="VideoUpload" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <!-- Thêm progress bar -->
            <div id="progressContainer" style="display:none;">
                <progress id="progressBar" value="0" max="100"></progress>
                <span id="progressText">0%</span>
            </div>

            <!-- Container để hiển thị thông báo -->
            <div id="resultContainer"></div>
        </form>
    </div>
    <div class="card-footer text-muted text-center">
        <button class="btn btn-success" type="submit" form="videoAddEditForm">Save</button>
        <a class="btn btn-warning" asp-controller="Channel" asp-action="Index">Back</a>
    </div>
</div>

@section Css {
    <style>
        #progressContainer {
            margin-top: 10px;
        }

        #progressBar {
            width: 100%;
            height: 20px;
        }

        #progressText {
            margin-left: 10px;
        }
    </style>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(function () {
            const videoId = $('#videoId').val();
            if (videoId && videoId !== "00000000-0000-0000-0000-000000000000") {
                $('#videoUpload').prop("disabled", true);
                const url = $('#imageUrl').val();
                $('#previewImage').append(`<img src="${url}" class="card-img-top rounded preview-image" />`);
            }
        });

        $('#imageUpload').on('change', function () {
            if (this.files) {
                $('#previewImage').empty();
                var reader = new FileReader();
                reader.onload = function (event) {
                    $('#previewImage').append(`<img src="${event.target.result}" class="card-img-top rounded preview-image" />`);
                }
                reader.readAsDataURL(this.files[0]);
            }
        });

        // Xử lý sự kiện submit form với AJAX
        $('#videoAddEditForm').on('submit', function (e) {
            e.preventDefault();

            const formData = new FormData(this);
            const progressContainer = $('#progressContainer');
            const progressBar = $('#progressBar');
            const progressText = $('#progressText');
            const resultContainer = $('#resultContainer');

            // Hiển thị progress bar
            progressContainer.show();
            progressBar.val(0);
            progressText.text('0%');

            // Gửi request AJAX
            const xhr = new XMLHttpRequest();
            xhr.open('POST', '/Video/CreateEditVideo', true);

            // Theo dõi tiến trình upload
            xhr.upload.onprogress = function (event) {
                if (event.lengthComputable) {
                    const percentComplete = Math.round((event.loaded / event.total) * 100);
                    progressBar.val(percentComplete);
                    progressText.text(`${percentComplete}% (${formatBytes(event.loaded)} / ${formatBytes(event.total)})`);
                }
            };

            // Xử lý khi upload hoàn tất
            xhr.onload = function () {
                if (xhr.status === 200) {
                    // Chuyển hướng về trang Channel/Index nếu thành công
                    window.location.href = '/Channel/Index';
                } else {
                    resultContainer.html('<p>Có lỗi xảy ra khi upload video.</p>');
                    progressContainer.hide();
                }
            };

            xhr.onerror = function () {
                resultContainer.html('<p>Có lỗi xảy ra khi upload video.</p>');
                progressContainer.hide();
            };

            xhr.send(formData);
        });

        // Hàm định dạng dung lượng
        function formatBytes(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }
    </script>
}