@model Web_Video.ViewModels.Video.VideoAddEditViewModel

<style>
    /* Style giống YouTube */
    body {
        font-family: 'Roboto', Arial, sans-serif;
        background-color: #f9f9f9;
    }

    .upload-container {
        /* max-width: 900px; */
        max-width: 100%;
        margin: 0 auto;
        padding: 20px;
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }

        .upload-container h2 {
            font-size: 20px;
            font-weight: 500;
            color: #030303;
            margin-bottom: 20px;
        }

    .form-group {
        margin-bottom: 20px;
    }

        .form-group label {
            font-size: 14px;
            font-weight: 500;
            color: #606060;
            margin-bottom: 5px;
            display: block;
        }

        .form-group select,
        .form-group input,
        .form-group textarea {
            width: 100%;
            padding: 10px;
            font-size: 14px;
            border: 1px solid #e0e0e0;
            border-radius: 4px;
            background-color: #f9f9f9;
        }

        .form-group textarea {
            resize: vertical;
            min-height: 100px;
        }

        .form-group input[type="file"] {
            padding: 3px;
        }

    .preview-image {
        max-height: 200px;
        overflow: hidden;
        border-radius: 8px;
        margin-bottom: 10px;
    }

        .preview-image img {
           /*  width: 100%;
            height: 100%; */
            object-fit: cover;
        }

    #progressContainer {
        margin-top: 15px;
    }

    .progress {
        height: 25px;
        background-color: #f5f5f5;
        border-radius: 4px;
    }

    .progress-bar {
        transition: width 0.3s ease-in-out;
        background-color: #cc0000;
    }

    #progressText {
        display: block;
        margin-top: 5px;
        font-size: 14px;
        color: #606060;
    }

    #resultContainer {
        color: #dc3545;
    }

    #recognitionLoading {
        margin-top: 15px;
        text-align: center;
    }

        #recognitionLoading p {
            font-size: 14px;
            color: #606060;
            margin-top: 10px;
        }

    .footer-buttons {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
        margin-top: 20px;
    }

    .btn-save {
        background-color: #cc0000;
        color: white;
        border: none;
        padding: 10px 20px;
        font-size: 14px;
        border-radius: 2px;
        text-transform: uppercase;
        font-weight: 500;
    }

        .btn-save:hover {
            background-color: #e60000;
        }

    .btn-back {
        background-color: #f1f1f1;
        color: #030303;
        border: none;
        padding: 10px 20px;
        font-size: 14px;
        border-radius: 2px;
        text-transform: uppercase;
        font-weight: 500;
    }

        .btn-back:hover {
            background-color: #e0e0e0;
        }
</style>

<div class="upload-container">
    <h2>@(Model.Id != Guid.Empty ? "Edit Video" : "Upload Video")</h2>
    <form id="videoAddEditForm" asp-action="CreateEditVideo" enctype="multipart/form-data">
        <input id="videoId" hidden asp-for="Id" />
        <input id="imageUrl" asp-for="ImageUrl" hidden />

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="CategoryId">Category</label>
                    <select asp-for="CategoryId" asp-items="Model.CategoryDropdown" class="form-select">
                        <option disabled selected>Select here</option>
                    </select>
                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Title">Title</label>
                    <input asp-for="Title" class="form-control" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Description">Description</label>
                    <textarea asp-for="Description" class="form-control" rows="6"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="ImageUpload">Thumbnail</label>
                    <div class="preview-image rounded bg-secondary" id="previewImage"></div>
                    <input id="imageUpload" asp-for="ImageUpload" type="file" class="form-control" accept="@Model.ImageContentTypes" />
                    <span asp-validation-for="ImageUpload" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="VideoUpload">Video</label>
                    <input id="videoUpload" asp-for="VideoUpload" type="file" class="form-control" accept="@Model.VideoContentTypes" />
                    <span asp-validation-for="VideoUpload" class="text-danger"></span>
                </div>
            </div>
        </div>

        <!-- Progress bar cho upload file -->
        <div id="progressContainer" style="display:none;">
            <div class="progress">
                <div id="progressBar" class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>
            </div>
            <span id="progressText">0% (0 KB / 0 KB)</span>
        </div>

        <!-- Spinner loading cho nhận diện khuôn mặt -->
        <div id="recognitionLoading" style="display:none;" class="text-center mt-3">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Đang xử lý...</span>
            </div>
            <p class="mt-2">Đang nhận diện khuôn mặt, vui lòng chờ...</p>
        </div>

        <!-- Container để hiển thị thông báo -->
        <div id="resultContainer" class="mt-3"></div>

        <div class="footer-buttons">
            <button class="btn btn-save" type="submit">Save</button>
            <a class="btn btn-back" asp-controller="Channel" asp-action="Index">Back</a>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(function () {
            const videoId = $('#videoId').val();
            if (videoId && videoId !== "00000000-0000-0000-0000-000000000000") {
                $('#videoUpload').prop("disabled", true);
                const url = $('#imageUrl').val();
                $('#previewImage').append(`<img src="${url}" class="card-img-top rounded preview-image" />`);
            }
        });

        $('#imageUpload').on('change', function () {
            if (this.files) {
                $('#previewImage').empty();
                var reader = new FileReader();
                reader.onload = function (event) {
                    $('#previewImage').append(`<img src="${event.target.result}" class="card-img-top rounded preview-image" />`);
                }
                reader.readAsDataURL(this.files[0]);
            }
        });

        $('#videoAddEditForm').on('submit', function (e) {
            e.preventDefault();

            const formData = new FormData(this);
            const progressContainer = $('#progressContainer');
            const progressBar = $('#progressBar');
            const progressText = $('#progressText');
            const recognitionLoading = $('#recognitionLoading');
            const resultContainer = $('#resultContainer');

            // Reset và hiển thị progress bar cho upload
            progressContainer.show();
            progressBar.css('width', '0%').text('0%');
            progressText.text('0% (0 KB / 0 KB)');
            resultContainer.empty();

            // Gửi request AJAX để upload file
            const xhr = new XMLHttpRequest();
            xhr.open('POST', '/Video/CreateEditVideo', true);

            // Theo dõi tiến trình upload
            xhr.upload.onprogress = function (event) {
                if (event.lengthComputable) {
                    const percentComplete = Math.round((event.loaded / event.total) * 100);
                    progressBar.css('width', `${percentComplete}%`).text(`${percentComplete}%`);
                    progressText.text(`${percentComplete}% (${formatBytes(event.loaded)} / ${formatBytes(event.total)})`);
                }
            };

            // Hiển thị spinner sau khi upload hoàn tất
            xhr.upload.onloadend = function () {
                progressContainer.show();
                recognitionLoading.show();
            };

            // Xử lý phản hồi từ server
            xhr.onreadystatechange = function () {
                if (xhr.readyState === XMLHttpRequest.DONE) {
                    recognitionLoading.hide();

                    if (xhr.status === 200 || xhr.status === 302) {
                        const redirectUrl = xhr.getResponseHeader('Location') || '/Channel/Index';
                        window.location.href = redirectUrl;
                    } else {
                        resultContainer.html(`<p class="text-danger">Lỗi upload: ${xhr.statusText} (Mã lỗi: ${xhr.status})</p>`);
                    }
                }
            };

            xhr.onerror = function () {
                progressContainer.hide();
                recognitionLoading.hide();
                resultContainer.html('<p class="text-danger">Có lỗi kết nối mạng khi upload video.</p>');
            };

            xhr.send(formData);
        });

        // Hàm định dạng dung lượng
        function formatBytes(bytes) {
            if (bytes === 0) return '0 KB';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }
    </script>
}